---
title: "Week 01 Setup — From Zero to Your First Journal Commit"
author: "AP Leith, PhD"
format:
  html:
    toc: true
    code-fold: false
    theme: cosmo
    df-print: default
editor: visual
jupyter: false
---

# Who this is for

New to all of this? Perfect. Follow the steps in order. You’ll install the tools, make a GitHub account, connect RStudio to GitHub, turn on Copilot, and push your first journal file.

> **Order matters:** R → RStudio → Quarto → Git → GitHub → Connect & Copilot → PAT → Template repo → First push.

------------------------------------------------------------------------

# 1) Install the tools (R → RStudio → Quarto → Git)

## 1.1 Install R

R is the language we’ll use in this course.

1.  Open: <https://cran.r-project.org/>
2.  Click your operating system (Windows / macOS / Linux).
3.  Download the **base** installer and run it.
4.  Accept the defaults.

**Windows (optional, later):** when you eventually install some packages “from source,” you’ll also need **Rtools**. Bookmark this page for later: <https://cran.r-project.org/bin/windows/Rtools/>

::: callout-tip **Check R installed (in RStudio Console later):**

``` r
version
```

You should see your R version printed. :::

------------------------------------------------------------------------

## 1.2 Install RStudio Desktop (the IDE)

RStudio is the app where you’ll edit `.qmd`, run R, and use Git.

1.  Open: <https://posit.co/download/rstudio-desktop/>
2.  Download the **free** Desktop edition for your OS.
3.  Install it (after R).
4.  Launch RStudio—you should see Console (bottom-left), Files/Plots (bottom-right), and an empty editor tab.

------------------------------------------------------------------------

## 1.3 Install Quarto CLI (the document engine)

Quarto turns your `.qmd` into web pages or PDFs.

1.  Open: <https://quarto.org/docs/get-started/>
2.  Download the installer for your OS.
3.  **Quit RStudio first**, then run the installer.
4.  Re‑open RStudio.

**Quick Quarto check (in R Console):**

``` r
install.packages("quarto")   # adds helper functions in R
quarto::quarto_version()
```

**Quick Quarto check (outside RStudio, Terminal/Command Prompt):**

``` bash
quarto --version
```

------------------------------------------------------------------------

## 1.4 Install Git (the version control tool)

We use Git to track changes and sync with GitHub.

-   **Windows:** Download the official installer and accept defaults: <https://git-scm.com/download/win>

-   **macOS (pick one):**

    a)  Open **Terminal** and run:

    ``` bash
    xcode-select --install
    ```

    (Installs Apple’s Command Line Tools, which include Git) **OR**

    b)  If you use Homebrew, run:

    ``` bash
    brew install git
    ```

    (Homebrew info: <https://brew.sh>)

-   **Verify Git in RStudio:** **Tools → Global Options… → Git/SVN** should show a path next to **Git executable** (e.g., `/usr/bin/git` or `C:\Program Files\Git\bin\git.exe`).

**Quick Git/Quarto check (Terminal, not the R Console):**

``` bash
git --version
quarto --version
```

You should see version numbers for both.

------------------------------------------------------------------------

# 2) Create your GitHub account

GitHub is where we’ll host your journal (and where Copilot lives).

1.  Open: <https://github.com/signup>
2.  Use your **SIUE .edu email** if possible.
3.  Verify your email and finish sign‑up.

------------------------------------------------------------------------

# 3) Request the GitHub Student Developer Pack (includes Copilot)

This upgrades you to GitHub Pro and gives you **GitHub Copilot** free while you’re a student.

1.  Open: <https://education.github.com/pack>
2.  Click **Get Student Developer Pack** and verify with your SIUE email.
3.  Approval can take up to \~72 hours. You’ll get Copilot access with the Pack.

> If Copilot doesn’t activate right away, finish the rest and turn it on later.

------------------------------------------------------------------------

# 4) Create your GitHub profile (quick, friendly)

Make it easy for your professor and teammates to recognize you.

1.  Click your avatar (top‑right on GitHub) → **Settings** → **Public profile**.
2.  Add a **profile photo** and a one‑line **bio** (e.g., “MC 451 \@ SIUE \| Research + R”).

(Optional but recommended) Create the special **profile README**:

-   New repo named **exactly** your username (e.g., `janedoe123`)
-   Make it Public and check **“Add a README”**
-   Edit `README.md` with a short intro—this appears on your profile.

------------------------------------------------------------------------

# 5) Connect RStudio to GitHub

We’ll clone your **journal repository** into RStudio and set up Git.

## 5.1 Create your **journal** repository on GitHub

1.  On GitHub, click the **+** (top‑right) → **New repository**.
2.  **Name:** `MC451-Reading-Journal`
3.  **Public** visibility (so it’s easy for us to view).
4.  **Do not** add a README, .gitignore, or license (we’ll supply those locally).
5.  Click **Create repository**. You’ll see a page with the repo URL—leave this tab open.

------------------------------------------------------------------------

## 5.2 Clone the repo into RStudio (make a local project)

1.  In RStudio: **File → New Project → Version Control → Git**
2.  **Repository URL:** paste your repo URL from GitHub (ends with `.git`)
3.  **Create Project**.

You now have a local project folder linked to your GitHub repo. You should see a **Git** tab in the top‑right pane.

------------------------------------------------------------------------

# 6) Turn on GitHub Copilot inside RStudio

1.  In RStudio: **Tools → Global Options → Copilot**

2.  Check **Enable GitHub Copilot**.

3.  Click **Install Copilot Agent** (if prompted).

4.  Click **Sign in** and use the GitHub account that has the Student Pack.

5.  Open a `.qmd` or `.R` file and start typing—you’ll see ghosted suggestions.

    -   **Tab** to accept, **Esc** to dismiss.

> If you don’t see Copilot yet, your Student Pack might still be pending. You can come back later to finish sign‑in.

------------------------------------------------------------------------

# 7) Create and store a GitHub Personal Access Token (PAT)

GitHub now uses tokens for authentication (not passwords).

## 7.1 Generate a PAT on GitHub

1.  Open: <https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token>
2.  Click to create a token (fine to use **classic** tokens for this course).
3.  Name it something like **“SIUE‑journal‑pat”**.
4.  **Scopes:** check `repo` (and `workflow` if you want CI later).
5.  Copy the token now—it won’t be shown again.

## 7.2 Save the PAT to your computer (so RStudio/Git can use it)

In **RStudio Console**:

``` r
install.packages(c("usethis", "gitcreds"))
usethis::git_sitrep()           # shows current Git/GitHub status
usethis::edit_git_config()      # optional: set your name/email if needed

# Store the token securely in the Git credential store:
gitcreds::gitcreds_set()
# When prompted, paste the token you created on GitHub.
```

------------------------------------------------------------------------

# 8) Use the Week 01 template (provided ZIP) to set up your journal

> You’ll find a ZIP in Blackboard called **week01-journal-template.zip**. It contains:
>
> -   `README.md` (explains the repo)
> -   `.gitignore` (keeps junk files out of Git)
> -   `journal/` folder with a **template** `week01-reflection.qmd`
> -   `img/` (optional place for images)
> -   `_quarto.yml` (basic site/project settings)

## 8.1 Add the template files to your project

1.  Unzip `week01-journal-template.zip` **somewhere outside** your project.
2.  In RStudio, open the **Files** pane of your project.
3.  Click **Upload**, select all items from the unzipped folder, and upload into the **root** of your project (same place you see `.Rproj`).
4.  Confirm you now see `journal/week01-reflection.qmd`, `.gitignore`, etc.

> Prefer dragging files in Finder/Explorer? That’s fine—just put them in your **project folder** and click the **Git** tab to stage them.

------------------------------------------------------------------------

# 9) Make your first commit & push to GitHub

1.  Open `journal/week01-reflection.qmd`.

2.  Replace the placeholder text with your Week 01 thoughts (250–300 words).

3.  Click **Render** (upper‑left) to preview HTML locally.

4.  Go to the **Git** tab (top‑right):

    -   Check the boxes next to the new/changed files (e.g., `journal/week01-reflection.qmd`, `_quarto.yml`, etc.).
    -   Write a commit message like **“Add Week 01 journal with template files”**.
    -   Click **Commit**.
    -   Click **Push** (send to GitHub).

**Verify online:** Go to your repo on GitHub—you should see your files. If you published HTML (optional), you’ll see the rendered outputs in the repo too.

------------------------------------------------------------------------

# 10) Common problems & quick fixes

-   **I don’t see the Git tab in RStudio.** Go to **Tools → Global Options → Git/SVN** and make sure a Git executable path is set. If blank, click **Browse…** and choose it (Windows: `C:\Program Files\Git\bin\git.exe`; macOS: `/usr/bin/git`). Restart RStudio.

-   **`quarto` not found in Terminal.** Reboot so your PATH updates. Then run `quarto --version` again.

-   **Permission denied when pushing.** You probably need a PAT or saved credentials. Run:

    ``` r
    gitcreds::gitcreds_set()
    ```

    and paste your token.

-   **Copilot isn’t offering suggestions.** Confirm you’re signed into Copilot in **Tools → Global Options → Copilot** and your Student Pack is approved. Try closing and reopening RStudio.

------------------------------------------------------------------------

# 11) What you should have by the end of Week 01

-   R, RStudio, Quarto, and Git installed and verified.
-   GitHub account created (with a friendly profile photo + short bio).
-   Student Developer Pack requested (Copilot included).
-   RStudio connected to your GitHub repo.
-   Copilot turned on in RStudio.
-   Your **Week 01** journal (`journal/week01-reflection.qmd`) **committed & pushed** to GitHub.

------------------------------------------------------------------------

# Appendix — Useful links (keep these handy)

-   R downloads (CRAN): <https://cran.r-project.org/>

-   Rtools for Windows (later, if needed): <https://cran.r-project.org/bin/windows/Rtools/>

-   RStudio Desktop (free): <https://posit.co/download/rstudio-desktop/>

-   Quarto (Get Started): <https://quarto.org/docs/get-started/>

-   Git for Windows: <https://git-scm.com/download/win>

-   Install Apple Command Line Tools (macOS): `xcode-select --install`

-   Homebrew (macOS): <https://brew.sh>

-   GitHub sign up: <https://github.com/signup>

-   Student Developer Pack: <https://education.github.com/pack>

-   Create a Personal Access Token (PAT): <https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token>

-   RStudio Copilot docs: <https://docs.posit.co/ide/copilot/>

-   Store your token in R:

    ``` r
    install.packages(c("usethis","gitcreds"))
    usethis::git_sitrep()
    gitcreds::gitcreds_set()
    ```
